name: CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - "server/**"

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_EC2_PUBLIC_IP: ${{ secrets.AWS_EC2_PUBLIC_IP }}
      REPO_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Log in to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPO_URI

      - name: Create ECR Repository
        id: create_ecr
        run: |
          if ! aws ecr describe-repositories --repository-names oj-server --region $AWS_REGION; then
            aws ecr create-repository --repository-name oj-server --region $AWS_REGION
            echo "Repository 'oj-server' created."
          else
            echo "Repository 'oj-server' already exists. Skipping creation."
          fi

      - name: Build Docker Image
        run: docker build -t $REPO_URI/oj-server:${{ github.sha }} .
        working-directory: ./server

      - name: Push Image to ECR Repository
        run: docker push $REPO_URI/oj-server:${{ github.sha }}

      - name: Deploy Image on EC2
        run: |
          # Decode the key and save it to a file
          echo "${{ secrets.ENCODED_PEM_KEY }}" | base64 --decode > ec2-key.pem
          chmod 400 ec2-key.pem

          # Create .ssh directory if it doesn't exist
          mkdir -p ~/.ssh

          # Add EC2 public IP to known_hosts
          ssh-keyscan -H $AWS_EC2_PUBLIC_IP >> ~/.ssh/known_hosts

          ssh -i ec2-key.pem ubuntu@$AWS_EC2_PUBLIC_IP << 'EOF'
            # Install Docker if not present
            if ! command -v docker &> /dev/null; then
              echo "Docker not found, installing..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo docker ps
            else
              echo "Docker is already installed."
            fi

            docker stop oj-server || true
            docker rm oj-server || true
            docker image prune -af

            docker pull $REPO_URI/oj-server:${{ github.sha }}
            docker run -d --name oj-server -p 5000:5000 $REPO_URI/oj-server:${{ github.sha }}
          EOF

          rm ec2-key.pem
